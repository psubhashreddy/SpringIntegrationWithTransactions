<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:si-xml="http://www.springframework.org/schema/integration/xml"
	xmlns:si="http://www.springframework.org/schema/integration" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:si-file="http://www.springframework.org/schema/integration/file"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/integration
			http://www.springframework.org/schema/integration/spring-integration.xsd
			http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
			http://www.springframework.org/schema/integration/xml
			http://www.springframework.org/schema/integration/xml/spring-integration-xml.xsd
			http://www.springframework.org/schema/util
			http://www.springframework.org/schema/util/spring-util.xsd">
			
			<si-file:inbound-channel-adapter directory="D://Executions//sample//input" channel="fileInChannel" filter="regex">
				<si:poller id="inboundPoller" fixed-delay="5000">
					<si:transactional transaction-manager="transactionManager" synchronization-factory="syncFactory" propagation="REQUIRED" isolation="DEFAULT"/>
				</si:poller>
			</si-file:inbound-channel-adapter>
			
			<si:channel id="fileInChannel" />
			
			<bean id="regex" class="org.springframework.integration.file.config.FileListFilterFactoryBean">
			  <property name="filter">
			    <bean id="fileInputFilter" class="com.integration.filter.ValidatingFilter" />
			  </property>
			  <property name="preventDuplicates" value="true"/>
			</bean>
			
			<bean id="transactionManager" class="org.springframework.integration.transaction.PseudoTransactionManager" />
	
			<si:transaction-synchronization-factory id="syncFactory">
				<si:after-commit  expression="payload.renameTo(payload.path.replaceAll('.xml','-PASSED.xml')) ? payload + ' renamed after success' : payload.name + ' failed to rename after success'" channel="infoLogger" />
				<si:after-rollback expression="payload.renameTo(payload.path.replaceAll('.xml','-FAILED.xml')) ? payload + ' renamed after faiure' : payload.name + ' failed to rename after failure'" channel="errorLogger" />
			</si:transaction-synchronization-factory>	
		
			<si:logging-channel-adapter id="infoLogger" level="INFO" />
			<si:logging-channel-adapter id="errorLogger" level="ERROR" />
			
			<si:header-enricher input-channel="fileInChannel" output-channel="enricherOutChannel">
				<si:header name="output-file" ref= "headerUpdater" method="updateHeader"/>
			</si:header-enricher>
			
			<bean id="headerUpdater" class="com.integration.enricher.HeaderUpdater"/>
			
			<si:channel id="enricherOutChannel" />
						
			<si:transformer input-channel="enricherOutChannel" output-channel="transformOutChannel" expression="@contentTransformer.transform(payload)"/>

			<si:channel id="transformOutChannel" />
			
			<si:service-activator input-channel="transformOutChannel" output-channel="activatorOutChannel" >
				<bean class="com.integration.endpoints.XmlProcessor"></bean>
			</si:service-activator>
			
			<si:channel id="activatorOutChannel" />
			
			<si-file:outbound-channel-adapter directory="D://Executions//sample//output" channel="activatorOutChannel"
					filename-generator="nameGenerator" />
			
			<bean id="nameGenerator" class="com.integration.generator.NameGenerator" />
</beans>			